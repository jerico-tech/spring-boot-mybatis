<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jerico.springboot.mybatis.dao.ProductDAO">
    <sql id="base_column">
        id, name, price,create_time, last_update_time
    </sql>
    <select id="getProduct" resultType="com.jerico.springboot.mybatis.entity.ProductEntity">
        SELECT
        <include refid="base_column"/>
        FROM product
        where id = #{id}
    </select>

    <select id="listProducts" resultType="com.jerico.springboot.mybatis.entity.ProductEntity">
        select
        <include refid="base_column"></include>
        from product
    </select>

    <!-- 使用数据库的uuid作为主键 -->
<!--    <insert id="insertProduct">-->
<!--        <selectKey keyProperty="id" order="BEFORE" resultType="String">-->
<!--            SELECT uuid()-->
<!--        </selectKey>-->
<!--        insert into product-->
<!--        (id,name, price,create_time,last_update_time) values (#{id}, #{name}, #{price}, now(),now())-->
<!--    </insert>-->

    <!-- 在controller层把生成的主键赋给对象，在这里直接插入即可 -->
    <insert id="insertProduct">
        insert into product
        (id,name, price,create_time,last_update_time) values (#{id}, #{name}, #{price}, now(),now())
    </insert>


    <!-- 通过id更新 -->
    <update id="updateProduct">
        update product
        set name = #{name},
            price = #{price}
        where id = #{id}
    </update>

    <!-- 更新不为空的属性 -->
    <update id="updateProductNotNull">
        update product
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="price ! null">
                price = #{price}
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteProduct">
        delete
        from product
        where id = #{id}
    </delete>

    <insert id="batchInsertProduct" parameterType="java.util.List">
        insert into product (id, name,price, create_time, last_update_time) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id},#{item.name},#{item.price}, now(), now())
        </foreach>
    </insert>

    <!--    <update id="batchUpdateUser" parameterType="java.util.List">-->
    <!--        <foreach collection="list" item="item" index="index" separator=";">-->
    <!--                update user-->
    <!--                <set>-->
    <!--                    <if test="item.name != null">`name`=#{item.name},</if>-->
    <!--                    <if test="item.email != null">email=#{item.email}</if>-->
    <!--                </set>-->
    <!--                where id = #{item.id}-->
    <!--        </foreach>-->
    <!--    </update>-->

    <update id="batchUpdateProduct" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update product
            <set>
                <if test="item.name != null">
                    name = #{item.name,jdbcType=VARCHAR},
                </if>
                <if test="item.price != null">
                    price = #{item.price,jdbcType=VARCHAR},
                </if>
            </set>
            where id = #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>

    <delete id="batchDeleteProduct" parameterType="java.util.List">
        DELETE FROM product WHERE id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </delete>
</mapper>